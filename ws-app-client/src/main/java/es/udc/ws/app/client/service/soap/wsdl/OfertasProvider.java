
package es.udc.ws.app.client.service.soap.wsdl;

import java.util.List;
import javax.jws.WebMethod;
import javax.jws.WebParam;
import javax.jws.WebResult;
import javax.jws.WebService;
import javax.xml.bind.annotation.XmlSeeAlso;
import javax.xml.ws.Action;
import javax.xml.ws.FaultAction;
import javax.xml.ws.RequestWrapper;
import javax.xml.ws.ResponseWrapper;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebService(name = "OfertasProvider", targetNamespace = "http://soap.ws.udc.es/")
@XmlSeeAlso({
    ObjectFactory.class
})
public interface OfertasProvider {


    /**
     * 
     * @param email
     * @return
     *     returns java.util.List<es.udc.ws.app.client.service.soap.wsdl.OfertaDtoUsuario>
     * @throws SoapInstanceNotFoundException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "buscarOfertasUsuario", targetNamespace = "http://soap.ws.udc.es/", className = "es.udc.ws.app.client.service.soap.wsdl.BuscarOfertasUsuario")
    @ResponseWrapper(localName = "buscarOfertasUsuarioResponse", targetNamespace = "http://soap.ws.udc.es/", className = "es.udc.ws.app.client.service.soap.wsdl.BuscarOfertasUsuarioResponse")
    @Action(input = "http://soap.ws.udc.es/OfertasProvider/buscarOfertasUsuarioRequest", output = "http://soap.ws.udc.es/OfertasProvider/buscarOfertasUsuarioResponse", fault = {
        @FaultAction(className = SoapInstanceNotFoundException.class, value = "http://soap.ws.udc.es/OfertasProvider/buscarOfertasUsuario/Fault/SoapInstanceNotFoundException")
    })
    public List<OfertaDtoUsuario> buscarOfertasUsuario(
        @WebParam(name = "email", targetNamespace = "")
        String email)
        throws SoapInstanceNotFoundException
    ;

    /**
     * 
     * @param todas
     * @param email
     * @return
     *     returns java.util.List<es.udc.ws.app.client.service.soap.wsdl.ReservaDto>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "obtenerReservasUsuario", targetNamespace = "http://soap.ws.udc.es/", className = "es.udc.ws.app.client.service.soap.wsdl.ObtenerReservasUsuario")
    @ResponseWrapper(localName = "obtenerReservasUsuarioResponse", targetNamespace = "http://soap.ws.udc.es/", className = "es.udc.ws.app.client.service.soap.wsdl.ObtenerReservasUsuarioResponse")
    @Action(input = "http://soap.ws.udc.es/OfertasProvider/obtenerReservasUsuarioRequest", output = "http://soap.ws.udc.es/OfertasProvider/obtenerReservasUsuarioResponse")
    public List<ReservaDto> obtenerReservasUsuario(
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "todas", targetNamespace = "")
        boolean todas);

    /**
     * 
     * @param ofertaDto
     * @throws SoapInputValidationException
     * @throws SoapInstanceNotFoundException
     * @throws SoapInvalidOfferUpdateException
     */
    @WebMethod
    @RequestWrapper(localName = "actualizarOferta", targetNamespace = "http://soap.ws.udc.es/", className = "es.udc.ws.app.client.service.soap.wsdl.ActualizarOferta")
    @ResponseWrapper(localName = "actualizarOfertaResponse", targetNamespace = "http://soap.ws.udc.es/", className = "es.udc.ws.app.client.service.soap.wsdl.ActualizarOfertaResponse")
    @Action(input = "http://soap.ws.udc.es/OfertasProvider/actualizarOfertaRequest", output = "http://soap.ws.udc.es/OfertasProvider/actualizarOfertaResponse", fault = {
        @FaultAction(className = SoapInputValidationException.class, value = "http://soap.ws.udc.es/OfertasProvider/actualizarOferta/Fault/SoapInputValidationException"),
        @FaultAction(className = SoapInstanceNotFoundException.class, value = "http://soap.ws.udc.es/OfertasProvider/actualizarOferta/Fault/SoapInstanceNotFoundException"),
        @FaultAction(className = SoapInvalidOfferUpdateException.class, value = "http://soap.ws.udc.es/OfertasProvider/actualizarOferta/Fault/SoapInvalidOfferUpdateException")
    })
    public void actualizarOferta(
        @WebParam(name = "ofertaDto", targetNamespace = "")
        OfertaDto ofertaDto)
        throws SoapInputValidationException, SoapInstanceNotFoundException, SoapInvalidOfferUpdateException
    ;

    /**
     * 
     * @param ofertaDto
     * @return
     *     returns es.udc.ws.app.client.service.soap.wsdl.OfertaDto
     * @throws SoapInputValidationException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "crearOferta", targetNamespace = "http://soap.ws.udc.es/", className = "es.udc.ws.app.client.service.soap.wsdl.CrearOferta")
    @ResponseWrapper(localName = "crearOfertaResponse", targetNamespace = "http://soap.ws.udc.es/", className = "es.udc.ws.app.client.service.soap.wsdl.CrearOfertaResponse")
    @Action(input = "http://soap.ws.udc.es/OfertasProvider/crearOfertaRequest", output = "http://soap.ws.udc.es/OfertasProvider/crearOfertaResponse", fault = {
        @FaultAction(className = SoapInputValidationException.class, value = "http://soap.ws.udc.es/OfertasProvider/crearOferta/Fault/SoapInputValidationException")
    })
    public OfertaDto crearOferta(
        @WebParam(name = "ofertaDto", targetNamespace = "")
        OfertaDto ofertaDto)
        throws SoapInputValidationException
    ;

    /**
     * 
     * @param codOferta
     * @throws SoapInvalidOfferDeleteException
     * @throws SoapInstanceNotFoundException
     */
    @WebMethod
    @RequestWrapper(localName = "borrarOferta", targetNamespace = "http://soap.ws.udc.es/", className = "es.udc.ws.app.client.service.soap.wsdl.BorrarOferta")
    @ResponseWrapper(localName = "borrarOfertaResponse", targetNamespace = "http://soap.ws.udc.es/", className = "es.udc.ws.app.client.service.soap.wsdl.BorrarOfertaResponse")
    @Action(input = "http://soap.ws.udc.es/OfertasProvider/borrarOfertaRequest", output = "http://soap.ws.udc.es/OfertasProvider/borrarOfertaResponse", fault = {
        @FaultAction(className = SoapInstanceNotFoundException.class, value = "http://soap.ws.udc.es/OfertasProvider/borrarOferta/Fault/SoapInstanceNotFoundException"),
        @FaultAction(className = SoapInvalidOfferDeleteException.class, value = "http://soap.ws.udc.es/OfertasProvider/borrarOferta/Fault/SoapInvalidOfferDeleteException")
    })
    public void borrarOferta(
        @WebParam(name = "codOferta", targetNamespace = "")
        Long codOferta)
        throws SoapInstanceNotFoundException, SoapInvalidOfferDeleteException
    ;

    /**
     * 
     * @param codOferta
     * @throws SoapInputValidationException
     * @throws SoapInstanceNotFoundException
     * @throws SoapInvalidOfferUpdateException
     */
    @WebMethod
    @RequestWrapper(localName = "invalidarOferta", targetNamespace = "http://soap.ws.udc.es/", className = "es.udc.ws.app.client.service.soap.wsdl.InvalidarOferta")
    @ResponseWrapper(localName = "invalidarOfertaResponse", targetNamespace = "http://soap.ws.udc.es/", className = "es.udc.ws.app.client.service.soap.wsdl.InvalidarOfertaResponse")
    @Action(input = "http://soap.ws.udc.es/OfertasProvider/invalidarOfertaRequest", output = "http://soap.ws.udc.es/OfertasProvider/invalidarOfertaResponse", fault = {
        @FaultAction(className = SoapInputValidationException.class, value = "http://soap.ws.udc.es/OfertasProvider/invalidarOferta/Fault/SoapInputValidationException"),
        @FaultAction(className = SoapInstanceNotFoundException.class, value = "http://soap.ws.udc.es/OfertasProvider/invalidarOferta/Fault/SoapInstanceNotFoundException"),
        @FaultAction(className = SoapInvalidOfferUpdateException.class, value = "http://soap.ws.udc.es/OfertasProvider/invalidarOferta/Fault/SoapInvalidOfferUpdateException")
    })
    public void invalidarOferta(
        @WebParam(name = "codOferta", targetNamespace = "")
        Long codOferta)
        throws SoapInputValidationException, SoapInstanceNotFoundException, SoapInvalidOfferUpdateException
    ;

    /**
     * 
     * @param codOferta
     * @return
     *     returns es.udc.ws.app.client.service.soap.wsdl.OfertaDto
     * @throws SoapInstanceNotFoundException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "buscarOfertaID", targetNamespace = "http://soap.ws.udc.es/", className = "es.udc.ws.app.client.service.soap.wsdl.BuscarOfertaID")
    @ResponseWrapper(localName = "buscarOfertaIDResponse", targetNamespace = "http://soap.ws.udc.es/", className = "es.udc.ws.app.client.service.soap.wsdl.BuscarOfertaIDResponse")
    @Action(input = "http://soap.ws.udc.es/OfertasProvider/buscarOfertaIDRequest", output = "http://soap.ws.udc.es/OfertasProvider/buscarOfertaIDResponse", fault = {
        @FaultAction(className = SoapInstanceNotFoundException.class, value = "http://soap.ws.udc.es/OfertasProvider/buscarOfertaID/Fault/SoapInstanceNotFoundException")
    })
    public OfertaDto buscarOfertaID(
        @WebParam(name = "codOferta", targetNamespace = "")
        Long codOferta)
        throws SoapInstanceNotFoundException
    ;

    /**
     * 
     * @param codOferta
     * @return
     *     returns java.util.List<es.udc.ws.app.client.service.soap.wsdl.ReservaDto>
     * @throws SoapInstanceNotFoundException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "obtenerReservas", targetNamespace = "http://soap.ws.udc.es/", className = "es.udc.ws.app.client.service.soap.wsdl.ObtenerReservas")
    @ResponseWrapper(localName = "obtenerReservasResponse", targetNamespace = "http://soap.ws.udc.es/", className = "es.udc.ws.app.client.service.soap.wsdl.ObtenerReservasResponse")
    @Action(input = "http://soap.ws.udc.es/OfertasProvider/obtenerReservasRequest", output = "http://soap.ws.udc.es/OfertasProvider/obtenerReservasResponse", fault = {
        @FaultAction(className = SoapInstanceNotFoundException.class, value = "http://soap.ws.udc.es/OfertasProvider/obtenerReservas/Fault/SoapInstanceNotFoundException")
    })
    public List<ReservaDto> obtenerReservas(
        @WebParam(name = "codOferta", targetNamespace = "")
        Long codOferta)
        throws SoapInstanceNotFoundException
    ;

    /**
     * 
     * @param tarjetaCredito
     * @param codOferta
     * @param email
     * @return
     *     returns java.lang.Long
     * @throws SoapInputValidationException
     * @throws SoapInstanceNotFoundException
     * @throws SoapInvalidOfferReservationException
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "hacerReserva", targetNamespace = "http://soap.ws.udc.es/", className = "es.udc.ws.app.client.service.soap.wsdl.HacerReserva")
    @ResponseWrapper(localName = "hacerReservaResponse", targetNamespace = "http://soap.ws.udc.es/", className = "es.udc.ws.app.client.service.soap.wsdl.HacerReservaResponse")
    @Action(input = "http://soap.ws.udc.es/OfertasProvider/hacerReservaRequest", output = "http://soap.ws.udc.es/OfertasProvider/hacerReservaResponse", fault = {
        @FaultAction(className = SoapInstanceNotFoundException.class, value = "http://soap.ws.udc.es/OfertasProvider/hacerReserva/Fault/SoapInstanceNotFoundException"),
        @FaultAction(className = SoapInputValidationException.class, value = "http://soap.ws.udc.es/OfertasProvider/hacerReserva/Fault/SoapInputValidationException"),
        @FaultAction(className = SoapInvalidOfferReservationException.class, value = "http://soap.ws.udc.es/OfertasProvider/hacerReserva/Fault/SoapInvalidOfferReservationException")
    })
    public Long hacerReserva(
        @WebParam(name = "email", targetNamespace = "")
        String email,
        @WebParam(name = "tarjetaCredito", targetNamespace = "")
        String tarjetaCredito,
        @WebParam(name = "codOferta", targetNamespace = "")
        Long codOferta)
        throws SoapInputValidationException, SoapInstanceNotFoundException, SoapInvalidOfferReservationException
    ;

    /**
     * 
     * @param palabrasClave
     * @return
     *     returns java.util.List<es.udc.ws.app.client.service.soap.wsdl.OfertaDto>
     */
    @WebMethod
    @WebResult(targetNamespace = "")
    @RequestWrapper(localName = "buscarOfertas", targetNamespace = "http://soap.ws.udc.es/", className = "es.udc.ws.app.client.service.soap.wsdl.BuscarOfertas")
    @ResponseWrapper(localName = "buscarOfertasResponse", targetNamespace = "http://soap.ws.udc.es/", className = "es.udc.ws.app.client.service.soap.wsdl.BuscarOfertasResponse")
    @Action(input = "http://soap.ws.udc.es/OfertasProvider/buscarOfertasRequest", output = "http://soap.ws.udc.es/OfertasProvider/buscarOfertasResponse")
    public List<OfertaDto> buscarOfertas(
        @WebParam(name = "palabrasClave", targetNamespace = "")
        String palabrasClave);

    /**
     * 
     * @param codReserva
     * @throws SoapInstanceNotFoundException
     * @throws SoapInvalidOfferReclamationException
     */
    @WebMethod
    @RequestWrapper(localName = "reclamarReserva", targetNamespace = "http://soap.ws.udc.es/", className = "es.udc.ws.app.client.service.soap.wsdl.ReclamarReserva")
    @ResponseWrapper(localName = "reclamarReservaResponse", targetNamespace = "http://soap.ws.udc.es/", className = "es.udc.ws.app.client.service.soap.wsdl.ReclamarReservaResponse")
    @Action(input = "http://soap.ws.udc.es/OfertasProvider/reclamarReservaRequest", output = "http://soap.ws.udc.es/OfertasProvider/reclamarReservaResponse", fault = {
        @FaultAction(className = SoapInstanceNotFoundException.class, value = "http://soap.ws.udc.es/OfertasProvider/reclamarReserva/Fault/SoapInstanceNotFoundException"),
        @FaultAction(className = SoapInvalidOfferReclamationException.class, value = "http://soap.ws.udc.es/OfertasProvider/reclamarReserva/Fault/SoapInvalidOfferReclamationException")
    })
    public void reclamarReserva(
        @WebParam(name = "codReserva", targetNamespace = "")
        Long codReserva)
        throws SoapInstanceNotFoundException, SoapInvalidOfferReclamationException
    ;

}
